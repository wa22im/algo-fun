{"version":3,"sources":["algorithms/graph/node.js","algorithms/heapmap/heapModal.js","algorithms/heapmap/expe.js","algorithms/heapmap/tree.js","algorithms/heapmap/myheap.js","algorithms/sortAlgos/sortModal.js","algorithms/sortAlgos/sorting.js","web/navbar/navbar.js","web/home/splitext.js","web/footer/footer.js","web/home/home.js","algorithms/graph/mapNode.js","algorithms/graph/startNode.js","algorithms/graph/alghorithms.js","algorithms/graph/graphModel.js","algorithms/graph/mapPathFinding.js","App.js","serviceWorker.js","index.js"],"names":["Node","name","parent","distance","this","m","split","row","column","HeapModal","onclose","open","useState","next","setnext","problem","solution","Modal","onClose","Header","Content","image","Image","style","height","width","src","Description","href","target","Actions","Button","positive","onClick","Expe","exp","color","idx","Grid","Column","Divider","Tree","data","times","settimes","useEffect","len","length","Math","floor","transformHeapToTree","console","log","_","indx","startArray","pow","Fragment","Row","ind","margin","key","className","valuee","creatRow","MyHeap","openModel","setopenModel","serfHeap","setSerfHeap","heappLower","Heap","a","b","heappUpper","notif","setNotif","daysNotif","setDaysNotif","lowHeaps","setLowHeaps","upperHeaps","setUpperHeaps","expe","setExpe","numberDay","setNumberDays","setdayTrigger","followDays","setFollowDays","handleDayNumber","e","value","indexOf","shift","random","addToHeap","dot","size","peek","add","rebalence","abs","pop","poll","getMedian","uph","lowh","removeFromHeap","val","index","heapArray","findIndex","h","splice","activityNotifications","init","vi","notifArray","i","d","med","notifi","note","alerteDay","money","median","unshift","push","toArray","no","Container","marginTop","marginLeft","marginRight","Table","celled","HeaderCell","Body","map","not","Cell","Form","Group","inline","Field","Label","basic","pointing","Input","placeholder","type","max","onChange","min","animated","hidden","visible","Icon","icon","SortModal","wrapped","sleep","ms","Promise","resolve","setTimeout","Sorting","disbled","setdisbled","dataAyya","setdataAyya","arrLength","setarrLength","colorVariation","setColorVarition","windowWidth","setWidth","barWidth","setBarWidth","heightRange","refTab","createArray","arr","obj","twil","pickColor","mergee","tab","startt","mid","endd","startMid","valueh","indexx","firstColor","backgroundColor","startColor","endColor","mergeSort","quickSort","start","end","partition","endcolr","pivotValue","pivotIndex","swap","pivotColor","helper","helpp","selectionSort","n","j","swapColor","insertionSort","compColor","parseInt","he","ccc","bubbleSwap","bcolor","acolor","bubbleSort","handleResize","wid","window","innerWidth","getNum","num","strNum","String","foundNum","undefined","largestNum","largest","forEach","radixSort","maxLength","buckets","Array","from","flat","k","colorhold","duree","addEventListener","padding","disabled","content","textAlign","ref","Navbar","Menu","to","Item","as","active","Splitext","showEffect","setshowEffect","bordertype","setbordertype","border","borderRadius","onMouseEnter","onInit","typewriter","pauseFor","callFunction","options","strings","autoStart","loop","Footer","paddingTop","divided","stackable","List","link","location","HomepageHeading","mobile","showOn","setshowOn","text","inverted","fontSize","fontWeight","marginBottom","primary","DesktopContainer","children","props","Visibility","once","Segment","minHeight","vertical","Component","HomepageLayout","MapNode","NUMCOLUMNS","NUMROWS","firstNode","endNode","isWall","istopPoint","islack","isPickPoint","isPath","jirani","adjList","adjweghit","StarNode","f","g","require","default","dj","graph","ss","prioq","current","currentNode","returnedPath","nodesinque","Map","theway","set","delete","shortestpath","findparent","adj","get","vall","has","filter","heapnodes","Object","entries","Astar","startNode","openList","closedList","count","path","exists","child","calculateH","nodee","enddNode","rowNodee","columnNodee","rowEnd","colEnd","nodei","root","x","bfs","gridMap","endpoint","visited","queue","neibghours","dfs","stack","GraphModal","MapPathFinding","finishedFindinf","setdisabled","refresh","setrefresh","gridGenerated","setgridGenerated","startPoint","setstartPoint","endPoint","setendPoint","hold","sethold","gridGraph","setGridGraph","mouseDownEffect","setmouseDownEffect","lackOfWater","setlackOfWater","generateLack","setGenerateLack","pickPoints","setPickPoinst","choosePickPoint","setChoosePickPoint","pathnodes","setpathNodes","createLack","rowj","columni","lackNode","handleMouseEnter","createMapGrid","djikstra","startPointt","endPointt","colornumb","thePath","vistedNodes","colorspath","includes","boxShadow","astarSearch","colorsnum","handleDjk","handleAstar","handleBfs","innerHTML","handleDFS","leng","cor","generateRandomWalls","relaxed","columnIndex","rowIndex","onMouseLeave","onMouseUp","handleMouseUp","onMouseDown","handleMouseDown","App","exact","Boolean","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.2057c25b.chunk.js","sourcesContent":["class Node {\r\n  constructor(name, parent, distance) {\r\n    this.name = name;\r\n    this.parent = parent;\r\n    this.distance = distance;\r\n    let m = name.split('+')\r\n    this.row = m[0];\r\n    this.column = m[1]\r\n  }\r\n}\r\nexport default Node;\r\n","import React ,{useState} from \"react\";\r\nimport { Button, Header, Image, Modal } from \"semantic-ui-react\";\r\nconst HeapModal = ({ onclose, open }) => {\r\n const [next, setnext] = useState(0);\r\n const problem =   <p>\r\n HackerLand National Bank has a simple policy for warning clients\r\n about possible fraudulent account activity. If the amount spent by a\r\n client on a particular day is greater than or equal to 2× the\r\n client's median spending for a trailing number of days, , they send\r\n the client a notification about potential fraud. The bank doesn't\r\n send the client any notifications until they have at least that\r\n trailing number of prior days' transaction data. Given the number of\r\n trailing days d and a client's total daily expenditures for a period\r\n of n days, find and print the number of times the client will\r\n receive a notification over all n days. For example, d = 3 and\r\n expenditures = [10, 20, 30, 40, 50]. On the first three days, they\r\n just collect spending data. At day 4, we have trailing expenditures\r\n of [10, 20, 30]. The median is 20 and the day's expenditure is 40.\r\n Because 40 ≥ 2 × 20, there will be a notice. The next day, our\r\n trailing expenditures are [20, 30, 40] and the expenditures are 50.\r\n This is less than 2 × 30 so no notice will be sent. Over the period,\r\n there was one notice sent.\r\n</p>\r\nconst solution = <p>\r\n    in order to solve the problem , i used <strong> Heap data Structre</strong> to keep track of the Median , and not sort our follow days every time we pass to new day ,\r\n    <p> you can see the<strong> min heap</strong><strong> max heap</strong> in every time there is a notification</p> \r\n</p>\r\n  return (\r\n    <Modal onClose={() => onclose()} open={open}>\r\n      <Modal.Header>Heap Visualization </Modal.Header>\r\n      <Modal.Content image>\r\n        <Image\r\n          style={{\r\n              height:\"300px\",\r\n              width:'500px'\r\n          }}\r\n          src={process.env.PUBLIC_URL + \"/assets/images/heap.PNG\"}\r\n          \r\n        />\r\n        <Modal.Description>\r\n          <Header>Fraudulent activity notification </Header>\r\n            {next==0?problem:solution}\r\n          <p>Have Fun</p>\r\n          <h5>\r\n            {\" \"}\r\n            the problem founded on{\" \"}\r\n            <a\r\n              href=\"https://www.hackerrank.com/challenges/fraudulent-activity-notifications/problem\"\r\n              target=\"_blank\"\r\n            >\r\n              {\" \"}\r\n              HackerRank\r\n            </a>{\" \"}\r\n            u can read more about it{\" \"}\r\n          </h5>\r\n        </Modal.Description>\r\n      </Modal.Content>\r\n      <Modal.Actions>\r\n       { next==0?<Button positive onClick={() => setnext(1)}>\r\n          Solution\r\n        </Button>\r\n         : <Button positive onClick={() => onclose()}>\r\n         Got it\r\n       </Button>}\r\n      </Modal.Actions>\r\n    </Modal>\r\n  );\r\n};\r\n\r\nexport default HeapModal;\r\n","import React from \"react\";\r\nimport { Grid, Divider } from \"semantic-ui-react\";\r\n\r\nconst Expe = ({ exp, idx,color }) => {\r\n const  getColor = () => {};\r\n  return (\r\n    <Grid.Column\r\n    color={color}\r\n    >\r\n      {exp}\r\n      <Divider />\r\n    </Grid.Column>\r\n  );\r\n};\r\n\r\nexport default Expe;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { Grid } from \"semantic-ui-react\";\r\nimport _ from \"lodash\";\r\n\r\nconst Tree = ({ data }) => {\r\n  const [times, settimes] = useState(0);\r\n  const transformHeapToTree = (data) => {\r\n    let m = 0;\r\n    let len = data.length;\r\n    while (len > 0) {\r\n      len = Math.floor(len / 2);\r\n      m++;\r\n    }\r\n    settimes(m);\r\n  };\r\n  const creatRow = (indx) => {\r\n    let startArray = Math.pow(2, indx);\r\n    return !data ? (\r\n      \"\"\r\n    ) : (\r\n      <React.Fragment>\r\n        <Grid.Row>\r\n          {_.times(startArray, (ind) => {\r\n            return (\r\n              <div\r\n                style={{\r\n                  margin: \"auto\",\r\n                }}\r\n              >\r\n                <Grid.Column key={ind + indx + times}>\r\n                  <div className='grid-container-div'>\r\n                  {data[ind + startArray - 1]\r\n                    ? data[ind + startArray - 1].valuee\r\n                    : \"\"}\r\n                    </div>\r\n                </Grid.Column>\r\n              </div>\r\n            );\r\n          })}\r\n        </Grid.Row>\r\n      </React.Fragment>\r\n    );\r\n  };\r\n  useEffect(() => {\r\n    if (data) transformHeapToTree(data);\r\n    console.log(data);\r\n  }, [data]);\r\n  return <Grid>{_.times(times, (indx) => creatRow(indx))}</Grid>;\r\n};\r\n\r\nTree.propTypes = {\r\n  data: PropTypes.array,\r\n};\r\nexport default Tree;\r\n","import Heap from \"heap-js\";\r\nimport HeapModal from './heapModal'\r\n\r\nimport React, { useState, useEffect } from \"react\";\r\nimport {\r\n  Container,\r\n  Grid,\r\n  Form,\r\n  Label,\r\n  Input,\r\n  Button,\r\n  Icon,\r\n  Table,\r\n  Divider,\r\n  Header,\r\n} from \"semantic-ui-react\";\r\nimport _ from \"lodash\";\r\nimport HeapBar from \"./heapBar\";\r\nimport Expe from \"./expe\";\r\nimport Tree from \"./tree\";\r\n\r\nconst MyHeap = () => {\r\n  \r\n  \r\n  const [openModel, setopenModel] = useState(true);\r\n\r\n  const [serfHeap, setSerfHeap] = useState(0);\r\n  const customPriorityComparatorlower = (a, b) => a[\"valuee\"] - b[\"valuee\"];\r\n\r\n  const customPriorityComparator = (a, b) => b[\"valuee\"] - a[\"valuee\"];\r\n\r\n  let heappLower = new Heap(customPriorityComparator);\r\n  let heappUpper = new Heap(customPriorityComparatorlower);\r\n\r\n  const [endSearch, setEndSearch] = useState(false);\r\n\r\n  const [notif, setNotif] = useState([]);\r\n  const [daysNotif, setDaysNotif] = useState([]);\r\n  const [lowHeaps, setLowHeaps] = useState([]);\r\n  const [upperHeaps, setUpperHeaps] = useState([]);\r\n\r\n  const [expe, setExpe] = useState([]);\r\n  const [numberDay, setNumberDays] = useState(1);\r\n  const [dayTrigger, setdayTrigger] = useState(false);\r\n  const [followDays, setFollowDays] = useState(0);\r\n\r\n  const HandleRedo = () => {\r\n    setdayTrigger(false);\r\n    setNumberDays(1);\r\n\r\n    setSerfHeap(0);\r\n    setNotif(notif.splice());\r\n    setDaysNotif(daysNotif.splice());\r\n    setLowHeaps(lowHeaps.splice());\r\n    setUpperHeaps(upperHeaps.splice());\r\n    setExpe(expe.slice());\r\n    setFollowDays(0);\r\n  };\r\n\r\n  const handleDayNumber = (e) => {\r\n    if (e.target.value.indexOf(\"-\") === -1) {\r\n      if (e.target.name == \"numdays\") {\r\n        if (e.target.value < numberDay) {\r\n          let m = expe;\r\n          m.shift();\r\n          setExpe([...m]);\r\n        } else setExpe([...expe, Math.floor(Math.random() * 101) + 1]);\r\n\r\n        setNumberDays(e.target.value);\r\n      } else {\r\n        setFollowDays(e.target.value);\r\n      }\r\n    }\r\n  };\r\n  const confirmDays = () => {\r\n    setdayTrigger(true);\r\n    activityNotifications();\r\n  };\r\n\r\n  const addToHeap = (dot) => {\r\n    if (heappLower.size() == 0 || dot.value <= heappLower.peek().valuee)\r\n      heappLower.add(dot);\r\n    else heappUpper.add(dot);\r\n  };\r\n  const rebalence = () => {\r\n    if (Math.abs(heappUpper.size() - heappLower.size()) >= 2) {\r\n      if (heappUpper.size() > heappLower.size()) {\r\n        heappLower.add(heappUpper.pop());\r\n      } else heappUpper.add(heappLower.poll());\r\n    }\r\n  };\r\n\r\n  const getMedian = () => {\r\n    let uph = heappUpper.size();\r\n    let lowh = heappLower.size();\r\n    if (uph == lowh) {\r\n      return (heappLower.peek().valuee + heappUpper.peek().valuee) / 2;\r\n    } else {\r\n      return uph > lowh ? heappUpper.peek().valuee : heappLower.peek().valuee;\r\n    }\r\n  };\r\n\r\n  const removeFromHeap = (idx, val) => {\r\n    let index;\r\n    if (val <= heappLower.peek().valuee) {\r\n      index = heappLower.heapArray.findIndex((h) => h.row == idx);\r\n      heappLower.heapArray.splice(index, 1);\r\n    } else {\r\n      index = heappUpper.heapArray.findIndex((h) => h.row == idx);\r\n      heappUpper.heapArray.splice(index, 1);\r\n    }\r\n    rebalence();\r\n  };\r\n\r\n  const activityNotifications = () => {\r\n    heappLower.init([]);\r\n    heappUpper.init([]);\r\n    console.log(\"start algo\");\r\n    let vi = [];\r\n    let lowh = [];\r\n    let uph = [];\r\n    let d = 5;\r\n    let notifi = 0;\r\n    let notifArray = [];\r\n    let testHeap = _.times(followDays, (i) => {\r\n      let dot = {\r\n        row: i,\r\n\r\n        valuee: expe[i],\r\n      };\r\n      addToHeap(dot);\r\n      rebalence();\r\n    });\r\n    let j = Math.floor(d / 2);\r\n\r\n    for (var i = followDays; i < expe.length; i++) {\r\n      var med = getMedian();\r\n\r\n      if (expe[i] >= med * 2) {\r\n        notifi++;\r\n\r\n        let note = {\r\n          alerteDay: i + 1,\r\n          money: expe[i],\r\n          median: med,\r\n        };\r\n        vi.unshift(i);\r\n        notifArray.unshift(note);\r\n        lowh.push(heappLower.toArray());\r\n        uph.push(heappUpper.toArray());\r\n      }\r\n\r\n      removeFromHeap(i - followDays, expe[i - followDays]);\r\n      let no = {\r\n        row: i,\r\n        valuee: expe[i],\r\n      };\r\n\r\n      addToHeap(no);\r\n      rebalence();\r\n    }\r\n\r\n    setNotif([...notifArray]);\r\n\r\n    setDaysNotif([...vi]);\r\n    setLowHeaps([...lowh]);\r\n    setUpperHeaps([...uph]);\r\n  };\r\n\r\n  return  openModel?  <HeapModal\r\n  onclose ={()=>{\r\n    setopenModel(false)\r\n  }}\r\n  open = {openModel}\r\n/>:(\r\n    <Container\r\n      style={{\r\n        width: \"90%\",\r\n        marginTop: \"100px\",\r\n        marginLeft: \"100px\",\r\n        marginRight: \"50px\",\r\n      }}\r\n    >\r\n      <Header>Fraudulent Activity Notifications</Header>\r\n      <Container>\r\n       in this table , you can find the day of the alert , money spent and value of median .\r\n      </Container>\r\n\r\n      <Table\r\n        style={{\r\n          width: \"50vw\",\r\n        }}\r\n        celled\r\n      >\r\n        <Table.Header>\r\n          <Table.Row>\r\n            <Table.HeaderCell>day of alert </Table.HeaderCell>\r\n            <Table.HeaderCell>moeny spent</Table.HeaderCell>\r\n            <Table.HeaderCell>Median</Table.HeaderCell>\r\n          </Table.Row>\r\n        </Table.Header>\r\n        <Table.Body>\r\n          {notif.map((not, idx) => (\r\n            <Table.Row key={not + \"/\" + idx}>\r\n              <Table.Cell>{not.alerteDay}</Table.Cell>\r\n\r\n              <Table.Cell>{not.money}</Table.Cell>\r\n              <Table.Cell>{not.median}</Table.Cell>\r\n            </Table.Row>\r\n          ))}\r\n        </Table.Body>\r\n      </Table>\r\n\r\n      <Form>\r\n        <Form.Group inline>\r\n          <Form.Field>\r\n            <Label basic color=\"teal\" pointing=\"right\">\r\n              choose number of days ...\r\n            </Label>\r\n            <Input\r\n              name=\"numdays\"\r\n              width={4}\r\n              placeholder=\"0\"\r\n              type=\"number\"\r\n              max={50}\r\n              value={numberDay}\r\n              onChange={handleDayNumber}\r\n              min={1}\r\n            />\r\n          </Form.Field>\r\n\r\n          <Form.Field>\r\n            <Input\r\n              name=\"followdays\"\r\n              width={4}\r\n              value={followDays}\r\n              placeholder=\"0\"\r\n              type=\"number\"\r\n              max={numberDay - 1}\r\n              min={1}\r\n              onChange={handleDayNumber}\r\n            />\r\n\r\n            <Label basic color=\"teal\" pointing=\"left\">\r\n              choose follow days\r\n            </Label>\r\n          </Form.Field>\r\n        </Form.Group>\r\n        <Form.Button positive animated=\"vertical\" onClick={confirmDays}>\r\n          <Button.Content hidden>ready ???</Button.Content>\r\n          <Button.Content visible>\r\n            <Icon name=\"play\" />\r\n          </Button.Content>\r\n        </Form.Button>\r\n      </Form>\r\n\r\n      <Grid\r\n        style={{\r\n          margin: \"10px\",\r\n        }}\r\n      >\r\n        <Grid.Row>\r\n          {expe.map((exp, idx) => (\r\n            <Expe\r\n              color={daysNotif.indexOf(idx) == -1 ? 'white' : \"red\"}\r\n              key={idx + \"g\" + exp}\r\n              exp={exp}\r\n              idx={idx}\r\n            ></Expe>\r\n          ))}\r\n        </Grid.Row>\r\n      </Grid>\r\n      <Divider> </Divider>\r\n\r\n      <h4>\r\n        value in heap when a notification has been sent , you can check for the\r\n        median...{\" \"}\r\n      </h4>\r\n      <Button.Group>\r\n        <Button\r\n          icon\r\n          onClick={() => {\r\n            if (serfHeap >= 1) setSerfHeap(serfHeap - 1);\r\n          }}\r\n        >\r\n          <Icon name=\"angle double left\" />\r\n        </Button>\r\n        <Label> {`${notif.length==0? serfHeap:serfHeap+1}/${notif.length}`}</Label>\r\n        <Button\r\n          icon\r\n          onClick={() => {\r\n            if (serfHeap + 1 < notif.length) setSerfHeap(serfHeap + 1);\r\n          }}\r\n        >\r\n          <Icon name=\"angle double right\" />\r\n        </Button>\r\n      </Button.Group>\r\n      <Container\r\n        style={{\r\n          marginTop: \"40px\",\r\n        }}\r\n      >\r\n        <Grid celled width={10}>\r\n          <Grid.Column width={8}>\r\n            <h3> max heap </h3>\r\n            <Tree data={lowHeaps[serfHeap]}></Tree>\r\n          </Grid.Column>\r\n          <Grid.Column width={4}>\r\n            <h3> min heap </h3>\r\n\r\n            <Tree data={upperHeaps[serfHeap]}></Tree>\r\n          </Grid.Column>\r\n        </Grid>\r\n      </Container>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default MyHeap;\r\n","import React from \"react\";\r\nimport { Button, Header, Image, Modal } from \"semantic-ui-react\";\r\nconst SortModal = ({ onclose, open }) => {\r\n  return (\r\n    <Modal onClose={() => onclose()} open={open}>\r\n      <Modal.Header>Sorting Visualization </Modal.Header>\r\n      <Modal.Content image>\r\n        <Image\r\n         size='massive'\r\n          src={process.env.PUBLIC_URL + \"/assets/images/sort.PNG\"}\r\n          wrapped\r\n        />\r\n        <Modal.Description>\r\n          <Header>Welcom To Sort Algorithms </Header>\r\n          <p>\r\n            As u can see , in this section , we try to Visualise sort algorithms\r\n          </p>\r\n          <h5>the algorithms implemented are :</h5>\r\n          <p>\r\n            <strong> Merge Sort </strong> , <strong> Quick Sort</strong>,{\" \"}\r\n            <strong> Radix Sort</strong>\r\n            <strong>Selection Sort </strong> ,<strong> Insertion Sort</strong>\r\n            and <strong> Bubble Sort</strong>\r\n          </p>\r\n        <p>\r\n            Have Fun \r\n        </p>\r\n        </Modal.Description>\r\n      </Modal.Content>\r\n      <Modal.Actions>\r\n        <Button positive onClick={() => onclose()}>\r\n          Got it\r\n        </Button>\r\n      </Modal.Actions>\r\n    </Modal>\r\n  );\r\n};\r\n\r\nexport default SortModal;\r\n","import React, { useEffect, useState, useRef } from \"react\";\r\nimport { Container, Button, Icon, Input, Grid } from \"semantic-ui-react\";\r\nimport \"./sortCss.css\";\r\nimport SortModal from \"./sortModal\";\r\n\r\nconst getRandom = (min, max) => {\r\n  return Math.floor(Math.random() * (max - min) + min);\r\n};\r\n\r\nfunction sleep(ms) {\r\n  return new Promise((resolve) => setTimeout(resolve, ms));\r\n}\r\nexport const Sorting = () => {\r\n  const [openModel, setopenModel] = useState(true);\r\n\r\n  const [disbled, setdisbled] = useState(false);\r\n  const [dataAyya, setdataAyya] = useState([]);\r\n  //var arrLength=100;\r\n  const [arrLength, setarrLength] = useState(50);\r\n  const [colorVariation, setColorVarition] = useState(150);\r\n  const [windowWidth, setWidth] = useState(0);\r\n  const [barWidth, setBarWidth] = useState(\"10px\");\r\n  const heightRange = [20, 700];\r\n  const refTab = [];\r\n  const createArray = () => {\r\n    console.log(arrLength);\r\n    let arr = [];\r\n    for (var i = 0; i < arrLength; i++) {\r\n      let obj = {};\r\n      obj.twil = getRandom(heightRange[0], heightRange[1]);\r\n      obj.color = pickColor(i);\r\n      arr.push(obj);\r\n    }\r\n\r\n    setdataAyya([...arr]);\r\n    refTab.splice();\r\n  };\r\n  const pickColor = (idx) => {\r\n    return `hsl(${idx + colorVariation}, 87%, 45%)`;\r\n  };\r\n\r\n  const mergee = async (tab, startt, mid, endd) => {\r\n    let startMid = mid + 1;\r\n\r\n    if (dataAyya[mid].twil < dataAyya[startMid].twil) return;\r\n    while (startt <= mid && startMid <= endd) {\r\n      if (dataAyya[startt].twil < dataAyya[startMid].twil) {\r\n        startt++;\r\n      } else {\r\n        let valueh = tab[startMid].style.height;\r\n\r\n        let value = dataAyya[startMid].twil;\r\n        let indexx = startMid;\r\n        let firstColor = tab[startMid].style.backgroundColor;\r\n        tab[startMid].style.backgroundColor = \"red\";\r\n        let startColor = tab[startt].style.backgroundColor;\r\n        tab[startt].style.backgroundColor = \"black\";\r\n        let endColor = tab[endd].style.backgroundColor;\r\n        tab[endd].style.backgroundColor = \"black\";\r\n\r\n        while (indexx != startt) {\r\n          tab[indexx].style.height = tab[indexx - 1].style.height;\r\n          await sleep(1);\r\n\r\n          dataAyya[indexx].twil = dataAyya[indexx - 1].twil;\r\n\r\n          indexx--;\r\n        }\r\n        tab[startt].style.backgroundColor = startColor;\r\n        tab[endd].style.backgroundColor = endColor;\r\n        tab[startMid].style.backgroundColor = firstColor;\r\n\r\n        tab[startt].style.height = valueh;\r\n\r\n        dataAyya[startt].twil = value;\r\n        startt++;\r\n        mid++;\r\n        startMid++;\r\n      }\r\n    }\r\n  };\r\n\r\n  const mergeSort = async (tab, startt, endd) => {\r\n    if (startt < endd) {\r\n      var m = Math.floor(startt + (endd - startt) / 2);\r\n\r\n      await mergeSort(tab, startt, m);\r\n      await mergeSort(tab, m + 1, endd);\r\n      await mergee(tab, startt, m, endd);\r\n    }\r\n  };\r\n\r\n  const quickSort = async (arr, start, end) => {\r\n    if (start >= end) {\r\n      return;\r\n    }\r\n    let index = await partition(arr, start, end);\r\n\r\n    await quickSort(arr, start, index - 1);\r\n    await quickSort(arr, index + 1, end);\r\n  };\r\n\r\n  const partition = async (arr, start, end) => {\r\n    let endcolr = arr[end].style.backgroundColor;\r\n    let startColor = arr[start].style.backgroundColor;\r\n\r\n    arr[end].style.backgroundColor = \"#9f0000\";\r\n    arr[start].style.backgroundColor = \"#d84315\";\r\n    await sleep((1 / end - start) * 10);\r\n\r\n    let pivotValue = dataAyya[end].twil;\r\n    let pivotIndex = start;\r\n    for (let i = start; i < end; i++) {\r\n      if (dataAyya[i].twil < pivotValue) {\r\n        await swap(arr, i, pivotIndex);\r\n\r\n        pivotIndex++;\r\n      }\r\n    }\r\n\r\n    await swap(arr, pivotIndex, end);\r\n    arr[end].style.backgroundColor = endcolr;\r\n    arr[start].style.backgroundColor = startColor;\r\n\r\n    return pivotIndex;\r\n  };\r\n\r\n  const reverseMerge = async (tab, startt, mid, endd) => {\r\n    let startMid = mid + 1;\r\n\r\n    if (dataAyya[startMid].twil < dataAyya[mid].twil) return;\r\n    while (startt <= mid && startMid <= endd) {\r\n      if (dataAyya[startt].twil >= dataAyya[startMid].twil) {\r\n        startt++;\r\n      } else {\r\n        let valueh = tab[startMid].style.height;\r\n        let value = dataAyya[startMid].twil;\r\n        let indexx = startMid;\r\n        let firstColor = tab[startMid].style.backgroundColor;\r\n        tab[startMid].style.backgroundColor = \"red\";\r\n        let startColor = tab[startt].style.backgroundColor;\r\n        tab[startt].style.backgroundColor = \"black\";\r\n        let endColor = tab[endd].style.backgroundColor;\r\n        tab[endd].style.backgroundColor = \"black\";\r\n\r\n        while (indexx != startt) {\r\n          tab[indexx].style.height = tab[indexx - 1].style.height;\r\n          await sleep(1);\r\n\r\n          dataAyya[indexx].twil = dataAyya[indexx - 1].twil;\r\n\r\n          indexx--;\r\n        }\r\n        tab[startt].style.backgroundColor = startColor;\r\n        tab[endd].style.backgroundColor = endColor;\r\n        tab[startMid].style.backgroundColor = firstColor;\r\n\r\n        tab[startt].style.height = valueh;\r\n\r\n        dataAyya[startt].twil = value;\r\n        startt++;\r\n        mid++;\r\n        startMid++;\r\n      }\r\n    }\r\n  };\r\n\r\n  const reverseSortMerge = async (tab, startt, endd) => {\r\n    if (startt < endd) {\r\n      var m = Math.floor(startt + (endd - startt) / 2);\r\n\r\n      await reverseSortMerge(tab, startt, m);\r\n      await reverseSortMerge(tab, m + 1, endd);\r\n      await reverseMerge(tab, startt, m, endd);\r\n    }\r\n  };\r\n\r\n  /*const funnyMerge = async (tab) => {\r\n    await mergeSort(tab, Math.floor(tab.length / 2) + 1, tab.length - 1);\r\n    await reverseSortMerge(tab, 0, Math.floor(tab.length / 2));\r\n    await sleep(1000);\r\n    await reverseSortMerge(tab, 0, tab.length - 1);\r\n  };*/\r\n\r\n  const swap = async (arr, a, b) => {\r\n    let pivotColor = arr[b].style.backgroundColor;\r\n    arr[b].style.backgroundColor = \"black\";\r\n    await sleep(1);\r\n\r\n    // swap height values\r\n    var helper = arr[a].style.height;\r\n    arr[a].style.height = arr[b].style.height;\r\n    arr[b].style.height = helper;\r\n    // swap colors\r\n    await sleep(10);\r\n\r\n    arr[b].style.backgroundColor = pivotColor;\r\n\r\n    var helpp = dataAyya[a].twil;\r\n    dataAyya[a].twil = dataAyya[b].twil;\r\n    dataAyya[b].twil = helpp;\r\n  };\r\n  const selectionSort = async (tab) => {\r\n    let n = tab.length;\r\n\r\n    for (var i = 0; i < n; i++) {\r\n      // Finding the smallest number in the subarray\r\n      let min = i;\r\n      for (var j = i; j < n; j++) {\r\n        if (dataAyya[j].twil > dataAyya[min].twil) {\r\n          min = j;\r\n        }\r\n      }\r\n      if (min != i) {\r\n        // Swapping the elements\r\n        let swapColor = tab[i].style.backgroundColor;\r\n        tab[i].style.backgroundColor = \"red\";\r\n\r\n        await swap(tab, i, min);\r\n        await sleep(100);\r\n        tab[i].style.backgroundColor = swapColor;\r\n      }\r\n    }\r\n  };\r\n\r\n  const insertionSort = async (arr) => {\r\n    const length = arr.length;\r\n    console.log(arr);\r\n\r\n    for (var i = 1; i < length; i++) {\r\n      console.log(i, \"arrr\", arr[i].style);\r\n      let compColor = arr[i].style.backgroundColor;\r\n      arr[i].style.backgroundColor = \"black\";\r\n      let key = parseInt(arr[i].style.height);\r\n      let j = i - 1;\r\n      let he = parseInt(arr[j].style.height);\r\n      console.log(j, \"jjjj\", arr[j], he);\r\n\r\n      while (j > -1 && he > key) {\r\n        let ccc = arr[j + 1].style.backgroundColor;\r\n        arr[j + 1].style.backgroundColor = \"red\";\r\n        await sleep(2);\r\n        arr[j + 1].style.backgroundColor = ccc;\r\n        await sleep(1);\r\n        dataAyya[j + 1].twil = dataAyya[j].twil;\r\n        arr[j + 1].style.height = arr[j].style.height;\r\n\r\n        await sleep(5);\r\n        j = j - 1;\r\n        if (j >= 0) {\r\n          he = parseInt(arr[j].style.height);\r\n        }\r\n      }\r\n\r\n      dataAyya[j + 1].twil = key;\r\n      arr[j + 1].style.height = key + \"px\";\r\n      arr[i].style.backgroundColor = compColor;\r\n    }\r\n  };\r\n\r\n  const bubbleSwap = async (arr, a, b) => {\r\n    let bcolor = arr[b].style.backgroundColor;\r\n    arr[b].style.backgroundColor = \"black\";\r\n    let acolor = arr[a].style.backgroundColor;\r\n    arr[a].style.backgroundColor = \"red\";\r\n\r\n    await sleep(5);\r\n\r\n    // swap height values\r\n    var helper = arr[a].style.height;\r\n    arr[a].style.height = arr[b].style.height;\r\n    arr[b].style.height = helper;\r\n    // swap colors\r\n    await sleep(Math.floor(arrLength / 20));\r\n\r\n    arr[b].style.backgroundColor = bcolor;\r\n    arr[a].style.backgroundColor = acolor;\r\n\r\n    var helpp = dataAyya[a].twil;\r\n    dataAyya[a].twil = dataAyya[b].twil;\r\n    dataAyya[b].twil = helpp;\r\n  };\r\n  const bubbleSort = async (arr) => {\r\n    //Length of the array\r\n    let n = arr.length;\r\n\r\n    for (let i = 0; i < n - 1; i++) {\r\n      for (let j = 0; j < n - i - 1; j++) {\r\n        //Swap the numbers\r\n        if (dataAyya[j].twil > dataAyya[j + 1].twil) {\r\n          await bubbleSwap(arr, j, j + 1);\r\n        }\r\n      }\r\n    }\r\n  };\r\n  const handleResize = () => {\r\n    let wid = window.innerWidth;\r\n    setWidth(wid);\r\n    // createBar()\r\n    // console.log(windowWidth,window.innerWidth);\r\n  };\r\n  const createBar = () => {\r\n    if (parseInt(window.innerWidth) <= 750) {\r\n      setBarWidth(`${300 / arrLength}px`);\r\n\r\n      heightRange[1] = 500;\r\n      createArray();\r\n    } else if (\r\n      parseInt(window.innerWidth) > 750 &&\r\n      parseInt(window.innerWidth) <= 1000\r\n    ) {\r\n      setBarWidth(`${300 / arrLength}px`);\r\n\r\n      heightRange[1] = 600;\r\n      createArray();\r\n    } else if (\r\n      parseInt(window.innerWidth) > 1000 &&\r\n      parseInt(window.innerWidth) <= 1300\r\n    ) {\r\n      setBarWidth(`${700 / arrLength}px`);\r\n\r\n      heightRange[1] = 600;\r\n      createArray();\r\n    } else {\r\n      setBarWidth(`${800 / arrLength}px`);\r\n\r\n      heightRange[1] = 700;\r\n\r\n      createArray();\r\n    }\r\n  };\r\n  const getNum = (num, index) => {\r\n    const strNum = String(num);\r\n    let end = strNum.length - 1;\r\n    const foundNum = strNum[end - index];\r\n\r\n    if (foundNum === undefined) return 0;\r\n    else return foundNum;\r\n  };\r\n\r\n  const largestNum = (arr) => {\r\n    let largest = \"0\";\r\n\r\n    arr.forEach((num) => {\r\n      const strNum = String(num.twil);\r\n\r\n      if (strNum.length > largest.length) largest = strNum;\r\n    });\r\n\r\n    return largest.length;\r\n  };\r\n  const radixSort = async () => {\r\n    var arr = dataAyya;\r\n    let maxLength = largestNum(arr);\r\n    for (let i = 0; i < maxLength; i++) {\r\n      let buckets = Array.from({ length: 10 }, () => []);\r\n      for (let j = 0; j < arr.length; j++) {\r\n        let num = getNum(arr[j].twil, i);\r\n\r\n        if (num !== undefined) buckets[num].push(arr[j]);\r\n      }\r\n      arr = buckets.flat();\r\n      for (var k = 0; k < dataAyya.length; k++) {\r\n        let colorhold = refTab[k].style.backgroundColor;\r\n        refTab[k].style.backgroundColor = \"black\";\r\n        refTab[k].style.height = arr[k].twil + \"px\";\r\n        let duree;\r\n\r\n        if (arrLength > 80) duree = 30;\r\n        else {\r\n          duree = 80;\r\n        }\r\n        await sleep(duree);\r\n        refTab[k].style.backgroundColor = colorhold;\r\n      }\r\n    }\r\n    await sleep(1);\r\n  };\r\n  useEffect(() => {\r\n    if (disbled == false) {\r\n      setWidth(window.innerWidth);\r\n      createBar();\r\n      window.addEventListener(\"resize\", handleResize);\r\n    }\r\n    return () => {\r\n      console.log(\"clean up\");\r\n    };\r\n  }, [barWidth, windowWidth, arrLength]);\r\n  return openModel ? (\r\n    <SortModal\r\n      onclose={() => {\r\n        setopenModel(false);\r\n      }}\r\n      open={openModel}\r\n    />\r\n  ) : (\r\n    <Container\r\n      style={{\r\n        padding: \"10px\",\r\n        width: \"100%\",\r\n      }}\r\n    >\r\n      <Grid.Row>\r\n        <Button.Group color=\"blue\">\r\n          <Button\r\n            disabled={disbled}\r\n            onClick={async () => {\r\n              setdisbled(true);\r\n              await radixSort();\r\n              setdisbled(false);\r\n            }}\r\n          >\r\n            Radix Sort\r\n          </Button>\r\n          <Button\r\n            disabled={disbled}\r\n            onClick={async () => {\r\n              setdisbled(true);\r\n              await mergeSort(refTab, 0, refTab.length - 1);\r\n              setdisbled(false);\r\n            }}\r\n          >\r\n            Merge sort\r\n          </Button>\r\n\r\n          <Button\r\n            disabled={disbled}\r\n            onClick={async () => {\r\n              setdisbled(true);\r\n\r\n              await quickSort(refTab, 0, refTab.length - 1);\r\n              setdisbled(false);\r\n            }}\r\n          >\r\n            QuickSort\r\n          </Button>\r\n        </Button.Group>\r\n        <Button.Group color=\"red\">\r\n          <Button\r\n            disabled={disbled}\r\n            onClick={() => {\r\n              setdisbled(true);\r\n\r\n              selectionSort(refTab);\r\n              setdisbled(false);\r\n            }}\r\n          >\r\n            selection sort\r\n          </Button>\r\n          <Button\r\n            disabled={disbled}\r\n            onClick={async () => {\r\n              setdisbled(true);\r\n\r\n              await insertionSort(refTab);\r\n              setdisbled(false);\r\n            }}\r\n          >\r\n            insertion sort\r\n          </Button>\r\n          <Button\r\n            disabled={disbled}\r\n            onClick={async () => {\r\n              setdisbled(true);\r\n\r\n              await bubbleSort(refTab);\r\n              setdisbled(false);\r\n            }}\r\n          >\r\n            bubbleSort\r\n          </Button>\r\n        </Button.Group>\r\n      </Grid.Row>\r\n      <Grid.Row>\r\n        <Button.Group>\r\n          <Button color=\"yellow\" disabled={disbled} onClick={createArray}>\r\n            restart\r\n          </Button>\r\n          <Button\r\n            color=\"green\"\r\n            disabled={disbled}\r\n            content=\"change color variations\"\r\n            icon=\"plus\"\r\n            onClick={() => {\r\n              setColorVarition(colorVariation + 10);\r\n              createArray();\r\n            }}\r\n          ></Button>\r\n          <Button\r\n            color=\"green\"\r\n            disabled={disbled}\r\n            icon\r\n            onClick={() => {\r\n              setColorVarition(colorVariation - 10);\r\n              createArray();\r\n            }}\r\n          >\r\n            <Icon name=\"minus\" />\r\n          </Button>\r\n        </Button.Group>\r\n        <Input\r\n          disabled={disbled}\r\n          type=\"range\"\r\n          min={30}\r\n          max={120}\r\n          value={arrLength}\r\n          onChange={(e) => {\r\n            let m = parseInt(e.target.value);\r\n            setarrLength(m);\r\n          }}\r\n        ></Input>\r\n      </Grid.Row>\r\n      <Container textAlign=\"center\">\r\n        <div className=\"containerare\">\r\n          {dataAyya.map((value, index) => (\r\n            <div\r\n              ref={(ref) => refTab.push(ref)}\r\n              className=\"bars\"\r\n              key={index}\r\n              style={{\r\n                height: `${value.twil}px`,\r\n                backgroundColor: `${value.color}`,\r\n                width: barWidth,\r\n              }}\r\n            ></div>\r\n          ))}\r\n        </div>\r\n      </Container>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default Sorting;\r\n","import React from \"react\";\r\n\r\nimport { Link } from \"react-router-dom\";\r\nimport { Menu, Container } from \"semantic-ui-react\";\r\n\r\nexport const Navbar = () => {\r\n  return (\r\n    <Menu\r\n      size=\"large\"\r\n      style={{\r\n        margin: \"1px\",\r\n      }}\r\n    >\r\n      <Container>\r\n        <Link to=\"/\">\r\n          <Menu.Item as=\"a\" active>\r\n            Home\r\n          </Menu.Item>\r\n        </Link>\r\n        <Link to=\"/sort\">\r\n          <Menu.Item as=\"a\">sort visualization</Menu.Item>\r\n        </Link>\r\n        <Link to=\"/map\">\r\n          <Menu.Item as=\"a\">Graph visualization</Menu.Item>\r\n        </Link>\r\n        <Link to=\"/heap\">\r\n          <Menu.Item as=\"a\">heap</Menu.Item>\r\n        </Link>\r\n      \r\n      </Container>\r\n    </Menu>\r\n  );\r\n};\r\n","import React, { useState } from \"react\";\r\nimport Typewriter from \"typewriter-effect\";\r\n\r\nexport const Splitext = () => {\r\n  const [showEffect, setshowEffect] = useState(\"\");\r\n\r\n  const [bordertype, setbordertype] = useState(\"\");\r\n  const handleMouseEnterr = () => {\r\n    setbordertype(\"1px solid #484848\");\r\n    setshowEffect(\"cool animation right ? x)\");\r\n    setTimeout(()=>{\r\n        setbordertype(\"\");\r\n        setshowEffect(\"\");\r\n    },2000)\r\n    \r\n  };\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <div\r\n        style={{\r\n          color:'white',\r\n          border: `${bordertype}`,\r\n          borderRadius: \"8px\",\r\n        }}\r\n      >\r\n        {\" \"}\r\n        <span\r\n          onMouseEnter={handleMouseEnterr}\r\n        >\r\n          <Typewriter\r\n            onInit={(typewriter) => {\r\n              typewriter\r\n                .pauseFor(100)\r\n\r\n                .pauseFor(2500)\r\n                .callFunction(() => {\r\n                  console.log(\"All strings were deleted\");\r\n                })\r\n                .start();\r\n            }}\r\n            options={{\r\n              strings: [\r\n                \"Welcome to Algo fun\",\r\n                \"Where i miss around with some algorithms and play around\",\r\n                \"check it out and feel free to join me :D\",\r\n              ],\r\n              autoStart: true,\r\n              loop: true,\r\n            }}\r\n          />\r\n        </span>\r\n      </div>\r\n      <h4\r\n      style ={{\r\n        color : 'grey'\r\n      }}     >\r\n      {showEffect}\r\n      </h4>\r\n\r\n    </React.Fragment>\r\n  );\r\n};\r\n","import React from \"react\";\r\nimport { Header, List, Grid, Container, Icon } from \"semantic-ui-react\";\r\n\r\nexport default function Footer() {\r\n  return (\r\n    <div\r\n      style={{\r\n        paddingTop: \"10px\",\r\n      }}\r\n    >\r\n      <Container>\r\n        <Grid divided stackable>\r\n          <Grid.Row>\r\n            <Grid.Column width={3}>\r\n              <Header as=\"h4\" content=\"About\" />\r\n              <List link>\r\n                <List.Item \r\n                as ='a' >\r\n                  <Icon\r\n                   name='linkedin'\r\n                  ></Icon>\r\n                  <a href=\"https://www.linkedin.com/in/wassim-miledi-7a7915189/\">\r\n                    {\" \"}\r\n                    Wassim Miladi\r\n                  </a>\r\n                </List.Item>\r\n                <List.Item \r\n                as ='a' >\r\n                  <Icon\r\n                   name='github'\r\n                  ></Icon>\r\n                  <a href=\"https://github.com/wa22im\">\r\n                    {\" \"}\r\n                    Wa22im\r\n                  </a>\r\n                </List.Item>\r\n                <List.Item\r\n                  \r\n                  onClick={() => {\r\n                    window.location.href = `mailto:wa22im.miladi@ieee.org`;\r\n                  }}\r\n                  as=\"a\"\r\n                >\r\n                    <Icon\r\n                   name='mail'\r\n                  ></Icon>\r\n                  Contact Us\r\n                </List.Item>\r\n              </List>\r\n            </Grid.Column>\r\n         \r\n            <Grid.Column width={7}>\r\n              <Header as=\"h4\">Code on github , feel free to modify it as u like</Header>\r\n             \r\n            </Grid.Column>\r\n          </Grid.Row>\r\n        </Grid>\r\n      </Container>\r\n    </div>\r\n  );\r\n}\r\n","import PropTypes from \"prop-types\";\r\nimport React, { Component,Image, useState } from \"react\";\r\nimport {\r\n  Button,\r\n  Container,\r\n  Header,\r\n  Segment,\r\n  Visibility,\r\n  Icon,\r\n} from \"semantic-ui-react\";\r\nimport { Splitext } from \"./splitext\";\r\nimport Footer from \"../footer/footer\";\r\n\r\nconst HomepageHeading = ({ mobile }) => {\r\n  const [showOn, setshowOn] = useState(true);\r\n  const handleMouseEnter = () => {\r\n    setshowOn(false);\r\n    setTimeout(() => {\r\n      setshowOn(true);\r\n    }, 1000);\r\n  };\r\n\r\n  return (\r\n    <Container text>\r\n      <div onMouseEnter={handleMouseEnter}>\r\n        <Header\r\n          as=\"h1\"\r\n          content=\"Hello stranger\"\r\n          inverted\r\n          style={{\r\n            fontSize: mobile ? \"2em\" : \"4em\",\r\n            fontWeight: \"normal\",\r\n            marginBottom: 0,\r\n            marginTop: mobile ? \"1.5em\" : \"3em\",\r\n          }}\r\n        />\r\n        {showOn ? (\r\n          \"\"\r\n        ) : (\r\n          <h4\r\n            style={{\r\n              marginRight: \"180px\",\r\n              color: \"yellow\",\r\n            }}\r\n          >\r\n            {\" \"}\r\n            i can't be typed :(\r\n          </h4>\r\n        )}\r\n      </div>\r\n\r\n      <Header\r\n        as=\"h1\"\r\n        inverted\r\n        style={{\r\n          fontSize: mobile ? \"1.5em\" : \"1.7em\",\r\n          fontWeight: \"normal\",\r\n          marginTop: mobile ? \"0.5em\" : \"1.5em\",\r\n        }}\r\n      >\r\n        <Splitext></Splitext>\r\n      </Header>\r\n\r\n      <Icon  name='gg' primary size=\"huge\">\r\n\r\n      </Icon>\r\n    </Container>\r\n  );\r\n};\r\n\r\nHomepageHeading.propTypes = {\r\n  mobile: PropTypes.bool,\r\n};\r\n\r\nclass DesktopContainer extends Component {\r\n  render() {\r\n    const { children } = this.props;\r\n\r\n    return (\r\n      <div>\r\n        <Visibility once={false}>\r\n          <Segment\r\n            inverted\r\n            textAlign=\"center\"\r\n            style={{ minHeight: \"100vh\", padding: \"1em 0em\" }}\r\n            vertical\r\n          >\r\n            <HomepageHeading />\r\n          </Segment>\r\n        </Visibility>\r\n\r\n        {children}\r\n        <Footer></Footer>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nDesktopContainer.propTypes = {\r\n  children: PropTypes.node,\r\n};\r\n\r\n\r\n\r\nconst HomepageLayout = () => <DesktopContainer></DesktopContainer>;\r\n\r\nexport default HomepageLayout;\r\n","class MapNode {\r\n  constructor(\r\n    row,\r\n    column,\r\n    NUMCOLUMNS,\r\n    NUMROWS,\r\n\r\n    firstNode = false,\r\n    endNode = false,\r\n    isWall = false,\r\n    istopPoint = false,\r\n    islack = false,\r\n    isPickPoint = false,\r\n    isPath=false,\r\n  ) {\r\n    this.ref = null;\r\n    this.column = column;\r\n    this.row = row;\r\n    this.name = row + \"+\" + column;\r\n    this.NUMROWS = NUMROWS;\r\n    this.NUMCOLUMNS = NUMCOLUMNS;\r\n    this.firstNode = firstNode;\r\n    this.endNode = endNode;\r\n    this.isWall = isWall;\r\n    this.istopPoint = istopPoint;\r\n    this.jirani = [];\r\n    this.adjList = {};\r\n    this.islack = islack;\r\n    this.isPickPoint=isPickPoint;\r\n    this.isPath=isPath\r\n    // setting neibghors and adjency list\r\n\r\n    let adjweghit = {};\r\n        if (this.row - 1 >= 0) {\r\n      this.jirani.push(`${this.row - 1}+${this.column}`);\r\n      if (this.islack) adjweghit[`${this.row - 1}+${this.column}`] = 5;\r\n      else adjweghit[`${this.row - 1}+${this.column}`] = 1;\r\n    }\r\n   \r\n    if (this.column + 1 < NUMCOLUMNS) {\r\n      this.jirani.push(`${this.row}+${this.column + 1}`);\r\n      if (this.islack) adjweghit[`${this.row}+${this.column + 1}`] = 5;\r\n      else adjweghit[`${this.row}+${this.column + 1}`] = 1;\r\n    }\r\n\r\n    if (this.row + 1 < NUMROWS) {\r\n      this.jirani.push(`${this.row + 1}+${this.column}`);\r\n      if (this.islack) adjweghit[`${this.row + 1}+${this.column}`] = 5;\r\n      else adjweghit[`${this.row + 1}+${this.column}`] = 1;\r\n    }\r\n\r\n   \r\n    if (this.column - 1 >= 0) {\r\n      this.jirani.push(`${this.row}+${this.column - 1}`);\r\n      if (this.islack) adjweghit[`${this.row}+${this.column - 1}`] = 5;\r\n      else adjweghit[`${this.row}+${this.column - 1}`] = 1;\r\n    }\r\n    this.adjList = adjweghit;\r\n  }\r\n}\r\n\r\nexport default MapNode;\r\n","export  class StarNode {\r\n  constructor(name, parent, f=0, g=0, h=0) {\r\n    this.name = name;\r\n    this.parent = parent;\r\n    this.f = f;\r\n    this.g = g;\r\n    this.h = h;\r\n  }\r\n}\r\n","import { StarNode } from \"./startNode\";\r\n\r\nconst { default: Node } = require(\"./node\");\r\nconst { default: Heap } = require(\"heap-js\");\r\nexport const dj = (graph, ss, endd) => {\r\n  if (!ss || !endd || !graph) return;\r\n  const comp = (a, b) => {\r\n    return a.distance - b.distance;\r\n  };\r\n  const prioq = new Heap(comp);\r\n  prioq.init([]);\r\n  let notfound = true;\r\n  let current = new Node(ss, null, 0);\r\n  prioq.push(current);\r\n  const returnedPath = [];\r\n\r\n  let nodesinque = new Map();\r\n  let theway = [];\r\n  nodesinque.set(ss, 0);\r\n\r\n  //\r\n  let currentNode;\r\n  while (notfound && prioq.size() > 0) {\r\n    currentNode = prioq.pop();\r\n    if (!currentNode) {\r\n      return [];\r\n    }\r\n    theway.push(currentNode);\r\n\r\n    returnedPath.push(currentNode.name);\r\n    nodesinque.delete(currentNode.name);\r\n    if (currentNode.name == endd) {\r\n      \r\n      let shortestpath = [];\r\n  \r\n      findparent(theway, currentNode, shortestpath);\r\n      return [shortestpath, returnedPath];\r\n      };\r\n    let adj = graph.get(currentNode.name).adjList;\r\n    for (const [key, val] of Object.entries(adj)) {\r\n      console.log(val)\r\n      let m = new Node(key, currentNode.name, val + currentNode.distance);\r\n      if (graph.get(m.name).isWall) continue;\r\n      if (\r\n        theway.findIndex((vall) => {\r\n          return vall.name == key;\r\n        }) != -1\r\n      )\r\n        continue;\r\n      if (nodesinque.has(key)) {\r\n        if (nodesinque.get(key) > val + currentNode.distance) {\r\n          theway = [...theway.filter((heapnodes) => heapnodes.name != m.name)];\r\n          prioq.init([\r\n            ...prioq.heapArray.filter((heapnodes) => heapnodes.name != m.name),\r\n          ]);\r\n        }\r\n      }\r\n\r\n      prioq.push(m);\r\n\r\n      nodesinque.set(m.name, m.distance);\r\n      theway.push(m);\r\n      returnedPath.push(m.name);\r\n    }\r\n  }\r\n  return[[],[]]\r\n \r\n};\r\n\r\nexport const Astar = (graph, start, endd) => {\r\n  const startNode = new StarNode(start, null, 0, 0, 0);\r\n  //const endNode = new StarNode(endd , )\r\n\r\n  const comp = (a, b) => {\r\n    return a.f - b.f;\r\n  };\r\n  const openList = new Heap(comp);\r\n  const closedList = [];\r\n\r\n  openList.push(startNode);\r\n\r\n  let currentNode;\r\n  let count = 0\r\n  while (openList.heapArray.length > 0 && count<graph.size *4) {\r\n    currentNode = openList.pop();\r\n    closedList.push(currentNode);\r\n    if (currentNode.name == endd) {\r\n      let path = [];\r\n\r\n      findparent(closedList, currentNode, path);\r\n\r\n      return [path, closedList];\r\n    }\r\n    let adj = graph.get(currentNode.name).adjList;\r\n    for (const [key, val] of Object.entries(adj)) {\r\n      let exists = true\r\n\r\n      if (closedList.findIndex((n) => n.name == key) != -1) {\r\n    \r\n        exists =false\r\n        continue;\r\n      }\r\n      if (graph.get(key).isWall) continue;\r\n      let child = new StarNode(key, currentNode.name);\r\n      child.g = currentNode.g + val;\r\n      child.h = calculateH(child.name, endd);\r\n      child.f = child.g + child.h;\r\n      for (var i = 0; i < openList.heapArray.length; i++) {\r\n        if (child.name == openList.heapArray[i].name) {\r\n          if (child.g < openList.heapArray[i].g) {\r\n            openList.heapArray.splice(i, 1);\r\n            openList.push(child);\r\n          }\r\n          continue;\r\n        }\r\n      }\r\n      if (exists)\r\n      openList.push(child);\r\n    }\r\n    count ++;\r\n  }\r\n  return ([] , closedList);\r\n};\r\n\r\nfunction calculateH(nodee, enddNode) {\r\n  let m = nodee.split(\"+\");\r\n  let rowNodee = parseInt(m[0]);\r\n\r\n  let columnNodee = parseInt(m[1]);\r\n  m = enddNode.split(\"+\");\r\n  let rowEnd = parseInt(m[0]);\r\n  let colEnd = parseInt(m[1]);\r\n\r\n  return Math.floor(\r\n    Math.abs(rowNodee - rowEnd) + Math.abs(columnNodee - colEnd)\r\n  );\r\n}\r\nconst findparent = (theway, nodei, root) => {\r\n  if (nodei.parent == null) return;\r\n  else {\r\n    let m = nodei.parent;\r\n    root.push(m);\r\n    let x = theway.findIndex((val) => {\r\n      return val.name === m;\r\n    });\r\n    findparent(theway, theway[x], root);\r\n  }\r\n};\r\n\r\nexport const bfs = ( gridMap , startt , endpoint )=>{\r\n  const visited =[];\r\n  const queue = [];\r\n  const path = []\r\n  visited.push(startt)\r\n  queue.push(startt)  \r\n  while(queue.length>0){\r\n    let current = queue.shift()// dequeue\r\n    if ( current==endpoint) return path ; \r\n    path.unshift(current)\r\n    let neibghours = gridMap.get(current).jirani ;\r\n    console.log(current , neibghours )\r\n    \r\n      for ( var i =0 ; i<=neibghours.length-1 ; i++){\r\n        let val = neibghours[i]\r\n        if (gridMap.get(val).isWall)\r\n        continue ;\r\n        console.log(val)\r\n        if  ( visited.indexOf(val)==-1){\r\n        visited.push(val );\r\n        queue.push(val) // enqueue\r\n      }\r\n    }  \r\n  }\r\n  return [] ; \r\n}\r\n\r\n\r\n\r\nexport const dfs = ( gridMap , startt , endpoint )=>{\r\n const stack = [] ; \r\n const visited =[ ] ; \r\n const path = []; \r\n stack.push(startt) ; \r\n visited.push(startt)\r\n while(stack.length>0){\r\n   let current = stack.pop()\r\n   path.push(current)\r\n   if ( current == endpoint) return path  ; \r\n   let adjList = gridMap.get(current).jirani\r\n   visited.push(current)\r\n\r\n   for ( var i=adjList.length-1  ; i>=0 ;i--){\r\n    let val = adjList[i]\r\n    if (gridMap.get(val).isWall)\r\n    continue ;\r\n     if ( visited.indexOf(val)==-1){  \r\n       stack.push(val)\r\n       visited.push(current)\r\n\r\n\r\n     }\r\n   }\r\n\r\n }\r\n\r\n  return [] ; \r\n}","import React from \"react\";\r\nimport { Button, Header, Image, Modal } from \"semantic-ui-react\";\r\nimport \"./grid.css\";\r\nconst GraphModal = ({ onclose, open }) => {\r\n  return (\r\n    <Modal onClose={() => onclose()} open={open}>\r\n      <Modal.Header>Graph Visualization </Modal.Header>\r\n      <Modal.Content image>\r\n        <Image\r\n        style={{\r\n            height : '300px',\r\n        }}\r\n          src={process.env.PUBLIC_URL + \"/assets/images/Map.PNG\"}\r\n          wrapped\r\n        />\r\n        <Modal.Description>\r\n          <Header>Welcom To Graph Algorithms </Header>\r\n          <p>\r\n            As u can see , in this section , we try to apply diffrent Graph\r\n            algos ,\r\n          </p>\r\n          <h5>the algorithms implemented are :</h5> \r\n          <p><strong> A*</strong> and <strong>Dijkstra</strong> for the weighted graphs</p>\r\n          <p>\r\n            {\" \"}\r\n            <strong>Breadth First Search </strong>and<strong> Depth first Search</strong> for the unweighted\r\n            graphs{\" \"}\r\n          </p>\r\n          <p>\r\n            {\" 1) \"}\r\n            you can add <strong>walls</strong> that we can not pass above them\r\n            during our search , just by click down on your mouse and drag it\r\n            around the map and create your own MAZE or generate them randomly <div className=\"grid-container-div wall-node\"> </div>{\" \"}\r\n          </p>\r\n          <p>\r\n            {\"2)\"}\r\n            you can add <strong>Lack of Water</strong>, they are heavy nodes ,\r\n            A* and Dijkstra will try to avoid them when looking for the optimal\r\n            path <div className=\"grid-container-div lack-node\"> </div>{\" \"}\r\n          </p>\r\n          <p>\r\n            {\"3)\"}\r\n            Also you can add <strong>Pick Points</strong>, points that A* and\r\n            Dijkstra needs to pass from them to get to the destination ,{\" \"}\r\n            <div className=\"grid-container-div pick-node\"> 1</div>{\" \"}\r\n          </p>\r\n        </Modal.Description>\r\n      </Modal.Content>\r\n      <Modal.Actions>\r\n        <Button positive onClick={() => onclose()}>\r\n          Got it \r\n        </Button>\r\n     \r\n      </Modal.Actions>\r\n    </Modal>\r\n  );\r\n};\r\n\r\nexport default GraphModal;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport MapNode from \"./mapNode\";\r\nimport { Grid, Button, DropdownSearchInput, Input } from \"semantic-ui-react\";\r\nimport _ from \"lodash\";\r\nimport { dfs, bfs, dj, Astar } from \"./alghorithms\";\r\nimport './grid.css'\r\nimport GraphModal from \"./graphModel\";\r\nfunction sleep(ms) {\r\n  return new Promise((resolve) => setTimeout(resolve, ms));\r\n}\r\nconst MapPathFinding = (props) => {\r\n  const [openModel  , setopenModel]= useState(true)\r\n  const [finishedFindinf, setfinishedFindinf] = useState(false);\r\n  const [disabled, setdisabled] = useState(false);\r\n  const [NUMROWS, setNUMROWS] = useState(25);\r\n  const [NUMCOLUMNS, setNUMCOLUMNS] = useState(40);\r\n  const [refresh, setrefresh] = useState(0);\r\n  const [valueSlider, setvalueslider] = useState(2);\r\n\r\n  const [gridGenerated, setgridGenerated] = useState(false);\r\n  const [startPoint, setstartPoint] = useState(\"\");\r\n  const [endPoint, setendPoint] = useState(\"\");\r\n  const [hold, sethold] = useState(\"\");\r\n  const [gridGraph, setGridGraph] = useState(new Map());\r\n  const [mouseDownEffect, setmouseDownEffect] = useState(false);\r\n  const [lackOfWater, setlackOfWater] = useState(false);\r\n  const [generateLack, setGenerateLack] = useState(false);\r\n  const [pickPoints, setPickPoinst] = useState([]);\r\n  const [choosePickPoint, setChoosePickPoint] = useState(false);\r\n  const [pathnodes, setpathNodes] = useState([]);\r\n  const AddPickPoint = () => {\r\n    setChoosePickPoint(true);\r\n  };\r\n  const createLack = (index) => {\r\n    let m = index.split(\"+\");\r\n    let rowj = parseInt(m[0]);\r\n    let columni = parseInt(m[1]);\r\n    let lackNode = new MapNode(\r\n      rowj,\r\n      columni,\r\n      NUMCOLUMNS,\r\n      NUMROWS,\r\n      false,\r\n      false,\r\n      false,\r\n      false,\r\n      true\r\n    );\r\n    gridGraph.set(index, lackNode);\r\n    setGridGraph(gridGraph);\r\n    setrefresh(refresh + 1);\r\n  };\r\n  const handleMouseDown = (index) => {\r\n    if (choosePickPoint) {\r\n      if (!gridGraph.get(index).isPickPoint) {\r\n        gridGraph.get(index).isPickPoint = true;\r\n        setGridGraph(gridGraph);\r\n        setPickPoinst([...pickPoints, index]);\r\n        setChoosePickPoint(false);\r\n      }\r\n    } else {\r\n      if (lackOfWater) {\r\n        setGenerateLack(true);\r\n        createLack(index);\r\n      } else {\r\n        setmouseDownEffect(true);\r\n        if (gridGraph.get(index).firstNode) {\r\n          setstartPoint(\"\");\r\n          gridGraph.get(index).firstNode = false;\r\n\r\n          sethold(index);\r\n        } else if (gridGraph.get(index).endNode) {\r\n          setendPoint(\"\");\r\n          sethold(index);\r\n\r\n          gridGraph.get(index).endNode = false;\r\n        } else {\r\n          if (gridGraph.get(index).endNode == false) {\r\n            if (\r\n              gridGraph.get(index).firstNode == false &&\r\n              !gridGraph.get(index).isPickPoint\r\n            )\r\n              gridGraph.get(index).isWall = true;\r\n          }\r\n        }\r\n      }\r\n      setGridGraph(gridGraph);\r\n    }\r\n  };\r\n\r\n  const handleMouseEnter = (index) => {\r\n    if (lackOfWater) {\r\n      if (generateLack) createLack(index);\r\n    } else {\r\n      if (mouseDownEffect) {\r\n        if (startPoint == \"\") return;\r\n        else if (endPoint == \"\") return;\r\n        else {\r\n          if (gridGraph.get(index).endNode == false) {\r\n            if (\r\n              gridGraph.get(index).firstNode == false &&\r\n              !gridGraph.get(index).isPickPoint\r\n            )\r\n              gridGraph.get(index).isWall = true;\r\n          }\r\n        }\r\n        setGridGraph(gridGraph);\r\n        setrefresh(refresh + 1);\r\n      }\r\n    }\r\n  };\r\n  const handleMouseUp = (index) => {\r\n    if (lackOfWater) {\r\n      if (generateLack) createLack(index);\r\n      setGenerateLack(false);\r\n      setlackOfWater(false);\r\n    } else {\r\n      if (mouseDownEffect) {\r\n        if (startPoint == \"\") {\r\n          if (gridGraph.get(index).isWall) {\r\n            gridGraph.get(index).isWall = false;\r\n\r\n            setstartPoint(index);\r\n            gridGraph.get(index).firstNode = true;\r\n          } else if (gridGraph.get(index).endNode) {\r\n            gridGraph.get(hold).firstNode = true;\r\n            setstartPoint(hold);\r\n          } else {\r\n            gridGraph.get(index).firstNode = true;\r\n            setstartPoint(index);\r\n          }\r\n        } else if (endPoint == \"\") {\r\n          if (gridGraph.get(index).isWall) {\r\n            gridGraph.get(index).isWall = false;\r\n\r\n            setendPoint(index);\r\n            gridGraph.get(index).endNode = true;\r\n          } else if (gridGraph.get(index).firstNode) {\r\n            gridGraph.get(hold).endNode = true;\r\n            setendPoint(hold);\r\n          } else {\r\n            gridGraph.get(index).endNode = true;\r\n            setendPoint(index);\r\n          }\r\n        } else {\r\n          if (gridGraph.get(index).endNode == false) {\r\n            if (\r\n              gridGraph.get(index).firstNode == false &&\r\n              !gridGraph.get(index).isPickPoint\r\n            )\r\n              gridGraph.get(index).isWall = true;\r\n          }\r\n        }\r\n        setGridGraph(gridGraph);\r\n        setrefresh(refresh);\r\n        setmouseDownEffect(false);\r\n      }\r\n    }\r\n  };\r\n  const createMapGrid = () => {\r\n    for (var columni = 0; columni < NUMCOLUMNS; columni++) {\r\n      for (var rowj = 0; rowj < NUMROWS; rowj++) {\r\n        gridGraph.set(\r\n          rowj + \"+\" + columni,\r\n          new MapNode(\r\n            rowj,\r\n            columni,\r\n            NUMCOLUMNS,\r\n            NUMROWS,\r\n            false,\r\n            false,\r\n            false,\r\n            false\r\n          )\r\n        );\r\n      }\r\n    }\r\n\r\n    setstartPoint(\"1+5\");\r\n\r\n    gridGraph.get(\"1+5\").firstNode = true;\r\n\r\n    gridGraph.get(\"2+2\").endNode = true;\r\n\r\n    setendPoint(\"2+2\");\r\n    setGridGraph(gridGraph);\r\n    setgridGenerated(true);\r\n  };\r\n  const generateRandomWalls = () => {\r\n    let leng = Math.floor(\r\n      Math.random() * (NUMCOLUMNS - NUMROWS / 2) + NUMROWS / 4\r\n    );\r\n    for (var i = 0; i < leng; i++) {\r\n      let raw = Math.floor(Math.floor(Math.random() * NUMROWS));\r\n      let column = Math.floor(Math.floor(Math.random() * NUMCOLUMNS));\r\n      let cor = raw + \"+\" + column;\r\n      if (\r\n        cor != startPoint &&\r\n        cor != endPoint &&\r\n        !gridGraph.get(cor).isPickPoint &&\r\n        !gridGraph.get(cor).islack\r\n      )\r\n        gridGraph.get(cor).isWall = true;\r\n    }\r\n    setGridGraph(gridGraph);\r\n    setrefresh(refresh + 1);\r\n  };\r\n  const djikstra = async (startPointt, endPointt, colornumb = 1) => {\r\n    const [thePath, vistedNodes] = dj(gridGraph, startPointt, endPointt);\r\n    if (thePath.length == 0) return;\r\n    const colorspath = [\"#177e89\", \"#323031\"];\r\n    for (var i = 0; i < vistedNodes.length; i++) {\r\n      if (pathnodes.includes(vistedNodes[i])) continue;\r\n\r\n      gridGraph.get(vistedNodes[i]).ref.style.boxShadow =\r\n        \"1px 0px 10px 0px black\";\r\n\r\n      gridGraph.get(vistedNodes[i]).ref.style.borderRadius = \"5px\";\r\n      await sleep(10);\r\n      gridGraph.get(vistedNodes[i]).ref.style.backgroundColor = \"#ffc857\";\r\n    }\r\n    if (thePath) {\r\n      for (var i = thePath.length - 1; i >= 0; i--) {\r\n        if (pathnodes.indexOf(thePath[i]) != -1) {\r\n          gridGraph.get(thePath[i]).ref.style.backgroundColor = \"green\";\r\n\r\n          gridGraph.get(thePath[i]).ref.style.borderRadius = \"5px\";\r\n\r\n          gridGraph.get(thePath[i]).ref.style.boxShadow =\r\n            \" 5px 0px 10px 0px black\";\r\n        } else {\r\n          gridGraph.get(thePath[i]).ref.style.backgroundColor =\r\n            colorspath[colornumb];\r\n          gridGraph.get(thePath[i]).ref.style.borderRadius = \"5px\";\r\n\r\n          gridGraph.get(thePath[i]).ref.style.boxShadow =\r\n            \" 5px 0px 10px 0px black\";\r\n          pathnodes.push(thePath[i]);\r\n          await sleep(1);\r\n        }\r\n      }\r\n    }\r\n  };\r\n  const astarSearch = async (startPointt, endPointt, colorsnum = 0) => {\r\n    const [thePath, vistedNodes] = Astar(gridGraph, startPointt, endPointt);\r\n    if (thePath.length == 0) return;\r\n    const colorspath = [\"black\", \"#177e89\"];\r\n\r\n    for (var i = 0; i < vistedNodes.length; i++) {\r\n      if (pathnodes.includes(vistedNodes[i].name)) continue;\r\n      gridGraph.get(vistedNodes[i].name).ref.style.backgroundColor = \"yellow\";\r\n\r\n      gridGraph.get(vistedNodes[i].name).ref.style.boxShadow =\r\n        \"1px 0px 10px 0px black\";\r\n\r\n      gridGraph.get(vistedNodes[i].name).ref.style.borderRadius = \"5px\";\r\n      await sleep(1);\r\n    }\r\n    if (thePath) {\r\n      for (var i = thePath.length - 1; i >= 0; i--) {\r\n        if (pathnodes.includes(thePath[i])) {\r\n          gridGraph.get(thePath[i]).ref.style.backgroundColor = \"blue\";\r\n\r\n          gridGraph.get(thePath[i]).ref.style.borderRadius = \"5px\";\r\n\r\n          gridGraph.get(thePath[i]).ref.style.boxShadow =\r\n            \" 5px 0px 10px 0px black\";\r\n        }\r\n        gridGraph.get(thePath[i]).ref.style.backgroundColor =\r\n          colorspath[colorsnum];\r\n        gridGraph.get(thePath[i]).ref.style.borderRadius = \"10px\";\r\n        pathnodes.push(thePath[i]);\r\n      }\r\n    }\r\n  };\r\n  const addLackOfWater = () => {\r\n    setlackOfWater(true);\r\n  };\r\n  const cleanBoard = () => {\r\n    setpathNodes([...[]]);\r\n    setChoosePickPoint(false);\r\n    setPickPoinst([...[]]);\r\n    setgridGenerated(false);\r\n    setstartPoint(\"\");\r\n    setendPoint(\"\");\r\n    sethold(\"\");\r\n    setmouseDownEffect(false);\r\n    setlackOfWater(false);\r\n    setGenerateLack(false);\r\n    setrefresh(0);\r\n    createMapGrid();\r\n  };\r\n  const handleDjk = async () => {\r\n    if (pickPoints.length > 0) {\r\n      pickPoints.unshift(startPoint);\r\n      pickPoints.push(endPoint);\r\n      for (var i = 0; i < pickPoints.length - 1; i++) {\r\n        await djikstra(pickPoints[i], pickPoints[i + 1], i % 2);\r\n        await sleep(10);\r\n      }\r\n      pickPoints.pop();\r\n      pickPoints.shift();\r\n    } else {\r\n      await djikstra(startPoint, endPoint);\r\n    }\r\n    pathnodes.splice(0, pathnodes.length);\r\n  };\r\n  const handleAstar = async () => {\r\n    if (pickPoints.length > 0) {\r\n      pickPoints.unshift(startPoint);\r\n      pickPoints.push(endPoint);\r\n      for (var i = 0; i < pickPoints.length - 1; i++) {\r\n        await astarSearch(pickPoints[i], pickPoints[i + 1], i % 2);\r\n        await sleep(100);\r\n      }\r\n      pickPoints.pop();\r\n      pickPoints.shift();\r\n    } else {\r\n      await astarSearch(startPoint, endPoint);\r\n    }\r\n    pathnodes.splice(0, pathnodes.length);\r\n  };\r\n  const handleBfs = async () => {\r\n    for (var i = 0; i < pickPoints.length; i++) {\r\n      gridGraph.get(pickPoints[i]).isPickPoint = false;\r\n    }\r\n    setGridGraph(gridGraph);\r\n    setPickPoinst([...[]]);\r\n    let m = bfs(gridGraph, startPoint, endPoint);\r\n    for (var i = m.length - 2; i >= 0; i--) {\r\n      if (m[i] === \"0+0\") continue;\r\n      gridGraph.get(m[i]).ref.style.backgroundColor = \"yellow\";\r\n      gridGraph.get(m[i]).ref.style.boxShadow = \"1px 0px 10px 0px black\";\r\n      gridGraph.get(m[i]).ref.innerHTML = m.length - i;\r\n\r\n      gridGraph.get(m[i]).ref.style.borderRadius = \"5px\";\r\n      await sleep(1);\r\n    }\r\n  };\r\n  const handleDFS = async () => {\r\n    for (var i = 0; i < pickPoints.length; i++) {\r\n      gridGraph.get(pickPoints[i]).isPickPoint = false;\r\n    }\r\n    setGridGraph(gridGraph);\r\n    setPickPoinst([...[]]);\r\n\r\n    let m = dfs(gridGraph, startPoint, endPoint);\r\n    for (var i = 0; i < m.length - 1; i++) {\r\n      if (m[i] === \"0+0\") continue;\r\n      gridGraph.get(m[i]).ref.style.backgroundColor = \"yellow\";\r\n      gridGraph.get(m[i]).ref.style.boxShadow = \"1px 0px 10px 0px black\";\r\n      gridGraph.get(m[i]).ref.innerHTML = i;\r\n\r\n      await sleep(1);\r\n    }\r\n  };\r\n\r\n  const changeRangeMa = (e) => {\r\n    let rangevalue = parseInt(e.target.value);\r\n  };\r\n\r\n  useEffect(() => {\r\n    createMapGrid();\r\n  }, []);\r\n  return openModel?  <GraphModal\r\n    onclose ={()=>{\r\n      setopenModel(false)\r\n    }}\r\n    open = {openModel}\r\n  />: (\r\n    <div className=\"containermap\">\r\n      <Grid>\r\n        <Grid.Row>\r\n          <Button.Group color=\"black\">\r\n            <Button\r\n              disabled={disabled}\r\n              onClick={async () => {\r\n                setdisabled(true);\r\n                await handleAstar();\r\n              }}\r\n            >\r\n              A*\r\n            </Button>\r\n            <Button\r\n              disabled={disabled}\r\n              onClick={async () => {\r\n                setdisabled(true);\r\n                await handleDjk();\r\n              }}\r\n            >\r\n              dijkstra{\" \"}\r\n            </Button>\r\n          </Button.Group>\r\n          <Button.Group color=\"green\">\r\n            <Button\r\n              disabled={disabled}\r\n              onClick={async () => {\r\n                setdisabled(true);\r\n                await handleBfs();\r\n              }}\r\n            >\r\n              Breadth First Search\r\n            </Button>\r\n            <Button\r\n              disabled={disabled}\r\n              onClick={async () => {\r\n                setdisabled(true);\r\n                await handleDFS();\r\n              }}\r\n            >\r\n              Depth First Search\r\n            </Button>\r\n          </Button.Group>\r\n        </Grid.Row>\r\n        <Grid.Row>\r\n          <Button\r\n            disabled={disabled}\r\n            color=\"red\"\r\n            onClick={() => {\r\n              generateRandomWalls();\r\n            }}\r\n          >\r\n            Generate Random Walls\r\n          </Button>\r\n          <Button\r\n            disabled={disabled}\r\n            color=\"blue\"\r\n            onClick={() => {\r\n              addLackOfWater();\r\n            }}\r\n          >\r\n            Add lack of water{\" \"}\r\n          </Button>\r\n          <Button\r\n            disabled={disabled}\r\n            onClick={() => {\r\n              AddPickPoint();\r\n            }}\r\n          >\r\n            Add Pick Point{\" \"}\r\n          </Button>\r\n\r\n        \r\n          <Button\r\n            disabled={finishedFindinf}\r\n            color=\"teal\"\r\n            onClick={() => {\r\n              setdisabled(false);\r\n\r\n              cleanBoard();\r\n            }}\r\n          >\r\n            Clean Board{\" \"}\r\n          </Button>\r\n          { disabled? <Button\r\n            color=\"yellow\"\r\n            onClick={() => {\r\n              setdisabled(false);\r\n              setrefresh(refresh - 1);\r\n            }}\r\n          >\r\n            Clean path{\" \"}\r\n          </Button> :''}\r\n        </Grid.Row>\r\n      </Grid>\r\n\r\n      <Grid relaxed=\"very\" textAlign=\"center\">\r\n        <Grid.Row>\r\n          {!gridGenerated\r\n            ? \"\"\r\n            : _.times(NUMCOLUMNS, (columnIndex) => {\r\n                return (\r\n                  <Grid.Row \r\n                  \r\n                  key={columnIndex * Math.random() * 10}>\r\n                    {_.times(NUMROWS, (rowIndex) => {\r\n                      let index = rowIndex + \"+\" + columnIndex;\r\n                      return (\r\n                        <Grid.Column key={rowIndex * Math.random() * 10}>\r\n                          <div\r\n                                            disabled={true}\r\n\r\n                            ref={(ref) => (gridGraph.get(index).ref = ref)}\r\n                            onMouseLeave={() => {\r\n                              handleMouseEnter(index);\r\n                            }}\r\n                            onMouseUp={() => {\r\n                              handleMouseUp(index);\r\n                            }}\r\n                            onMouseEnter={() => {\r\n                              handleMouseEnter(index);\r\n                            }}\r\n                            onMouseDown={() => {\r\n                              handleMouseDown(index);\r\n                            }}\r\n                            className={`\r\n                            ${\r\n                              gridGraph.get(index).isPickPoint\r\n                                ? \"pick-node \"\r\n                                : \"\"\r\n                            }\r\n\r\n\r\n                            ${gridGraph.get(index).islack ? \"lack-node \" : \"\"}\r\n                            ${\r\n                              gridGraph.get(index).firstNode\r\n                                ? \"first-node \"\r\n                                : \"\"\r\n                            }\r\n                        ${gridGraph.get(index).endNode ? \"end-node \" : \"\"}\r\n                          ${gridGraph.get(index).isWall ? \"wall-node \" : \"\"}\r\n                        grid-container-div`}\r\n                          >\r\n                            {gridGraph.get(index).firstNode ? (\r\n                              <i className=\"yellow male icon\"></i>\r\n                            ) : (\r\n                              \"\"\r\n                            )}\r\n                            {gridGraph.get(index).endNode ? (\r\n                              <i className=\" dot circle outline icon\"></i>\r\n                            ) : (\r\n                              \"\"\r\n                            )}\r\n                            {gridGraph.get(index).isPickPoint ? (\r\n                              <i>{pickPoints.indexOf(index) + 1}</i>\r\n                            ) : (\r\n                              \"\"\r\n                            )}\r\n                          </div>\r\n                        </Grid.Column>\r\n                      );\r\n                    })}\r\n                  </Grid.Row>\r\n                );\r\n              })}\r\n        </Grid.Row>\r\n      </Grid>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MapPathFinding;\r\n","import React from \"react\";\nimport MyHeap from \"./algorithms/heapmap/myheap\";\n\nimport \"semantic-ui-css/semantic.min.css\";\n//import './maincss.css'\n\nimport { BrowserRouter as Router, Switch, Route, Link } from \"react-router-dom\";\nimport Sorting from \"./algorithms/sortAlgos/sorting\";\nimport { Navbar } from \"./web/navbar/navbar\";\nimport HomepageLayout, { Home } from \"./web/home/home\";\n\nimport MapPathFinding from \"./algorithms/graph/mapPathFinding\";\nfunction App() {\n  return (\n    <Router>\n      <Navbar></Navbar>\n\n      {/*\n         A <Switch> looks through all its children <Route>\n         elements and renders the first one whose path\n         matches the current URL. Use a <Switch> any time\n         you have multiple routes, but you want only one\n         of them to render at a time\n       */}\n\n      <Switch>\n        <Route exact path=\"/\">\n          <HomepageLayout />\n        </Route>\n\n        \n        <Route exact path=\"/sort\">\n          <Sorting />\n      \n        </Route>\n        <Route exact path=\"/heap\">\n          <MyHeap />\n        </Route>\n        <Route exact path=\"/map\">\n          <MapPathFinding></MapPathFinding>\n        </Route>\n      </Switch>\n    </Router>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}